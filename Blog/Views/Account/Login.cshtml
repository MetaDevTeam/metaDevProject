@using Blog.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<div class="content">
    <div class="inner">
		<section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "compact", role = "form" }))
            {
                @Html.AntiForgeryToken()
				<h3>@ViewBag.Title</h3>
                <h4>Use a local account to log in</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <p class="input">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email)
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
				</p>
                <p class="input required">
                    @Html.LabelFor(m => m.Password)     
                    @Html.PasswordFor(m => m.Password)
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
				</p>
                <p>
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe)
                </p>
                <div class="buttons">
                    <input type="submit" value="Log in" class="button" />
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}